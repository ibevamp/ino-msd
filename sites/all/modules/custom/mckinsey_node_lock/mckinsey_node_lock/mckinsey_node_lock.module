<?php

/**
 * Implements hook_admin_paths_alter().
 */
function mckinsey_node_lock_admin_paths_alter(&$paths) {
  $paths['node/*/lock-status'] = TRUE;

  return $paths;
}

/**
 * Implements hook_menu().
 */
function mckinsey_node_lock_menu() {
  $items['node/%/lock-status'] = array(
    'title' => 'Edit Lock Status',
    'access callback' => TRUE,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mckinsey_node_lock_form', 1),
    'weight' => 0,
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Form callback.
 */
function mckinsey_node_lock_form($form, &$form_state, $nid) {
  $node_wrapper = entity_metadata_wrapper('node', $nid);
  $locked = $node_wrapper->edit_lock_status->value();

  $form['node_edit_lock_status'] = array(
    '#type' => 'fieldset',
    '#title' => t('Node Edit Lock Status'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#tree' => TRUE,
    '#weight' => -99,
    '#group' => 'additional_settings',
  );

  $form['node_edit_lock_status']['locked'] = array(
    '#type' => 'checkbox',
    '#title' => t('Locked'),
    '#default_value' => $locked,
  );

  $form['node_edit_lock_status']['nid'] = array(
    '#type' => 'hidden',
    '#value' => $nid
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Save',
    '#ajax' => array(
      'callback' => 'mckinsey_node_edit_lock_status_update',
      'effect' => 'fade',
    ),
  );

  return $form;
}

/**
 * Form submit function.
 */
function mckinsey_node_lock_form_submit($form, &$form_state) {
  $nid = $form_state['values']['node_edit_lock_status']['nid'];
  $locked = $form_state['values']['node_edit_lock_status']['locked'];
  $node_wrapper = entity_metadata_wrapper('node', $nid);
  $node_wrapper->edit_lock_status->set($locked);
  $caught = FALSE;
  $status = 'unlocked';

  try {
    $node_wrapper->save();
  } catch (Exception $e) {
    echo 'Caught exception: ',  $e->getMessage(), "\n";
    $caught = TRUE;
  }

  if(!$caught) {
    if($locked == 1) {
      $status = 'locked';
    }

    drupal_set_message('The node is now ' . $status);
  }
}

/**
 * Form validate function.
 */
function mckinsey_node_lock_form_validate($form, &$form_state) {
}

/**
 * Form submit callback function.
 */
function mckinsey_node_edit_lock_status_update($form, &$form_state) {
  return $form;
}

/**
 * Implements hook_entity_property_info_alter().
 */
function mckinsey_node_lock_entity_property_info_alter(&$info) {
  $info['node']['properties']['edit_lock_status'] = array(
    'label' => t('Edit Lock Status'),
    'description' => 'A boolean indicating whether this node is locked to prevent editing.',
    'type' => 'integer',
    'schema field' => 'edit_lock_status',
    'setter callback' => 'entity_property_verbatim_set',
    'auto creation' => 'entity_property_create_array',
  );
}

/**
 * Implements hook_node_validate().
 */
function mckinsey_node_lock_node_validate($node, $form, &$form_state) {
  $nid = $node->nid;
  $node_wrapper = entity_metadata_wrapper('node', $nid);
  $locked = $node_wrapper->edit_lock_status->value();

  if($locked) {
    form_set_error('edit_lock_status', t('Node is locked to prevent editing.'));
  }
}